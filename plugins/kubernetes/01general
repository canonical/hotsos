#!/usr/bin/python3
import os
import re

from common import (
    constants,
    helpers
)

SERVICES = ["etcdctl",
            "calicoctl",
            "kubectl2",
            "kubelet",
            "containerd-shim",
            "containerd",
            "dockerd"]

SNAPS = [r'charm[\S]+',
         r'conjure-up',
         r'core[0-9]*',
         r'cdk-addons',
         r'docker',
         r'go',
         r'helm',
         r'kubernetes-[\S]+',
         r'kubeproxy',
         r'kubectl',
         r'kubelet',
         r'kubeadm',
         r'kubefed',
         r'vault',
         ]
KUBERNETES_INFO = {}


def get_service_info():
    ps_output = helpers.get_ps()
    if not ps_output:
        return

    service_info = {}
    for svc in SERVICES:
        for line in ps_output:
            ret = re.compile(r".+({})\s+.+".format(svc)).match(line)
            if ret:
                if svc in service_info:
                    service_info[svc] += 1
                else:
                    service_info[svc] = 1

    if service_info:
        KUBERNETES_INFO["services"] = service_info


def get_snap_info():
    snap_list_all = helpers.get_snap_list_all()
    if not snap_list_all:
        return

    snap_info = {}
    for line in snap_list_all:
        for snap in SNAPS:
            ret = re.compile(r"^({})\s+([\S]+)\s+.+".format(snap)).match(line)
            if ret:
                # only show latest version installed
                if ret[1] in snap_info:
                    if ret[2] > snap_info[ret[1]]:
                        snap_info[ret[1]] = ret[2]
                else:
                    snap_info[ret[1]] = ret[2]

    if snap_info:
        KUBERNETES_INFO["snaps"] = snap_info


def get_pod_info():
    pod_info = []
    pods_path = os.path.join(constants.DATA_ROOT, "var/log/pods")
    if os.path.exists(pods_path):
        for pod in os.listdir(pods_path):
            pod_info.append(pod)

    if pod_info:
        KUBERNETES_INFO["pods"] = pod_info


def get_container_info():
    container_info = []
    containers_path = os.path.join(constants.DATA_ROOT, "var/log/containers")
    if os.path.exists(containers_path):
        for container in os.listdir(containers_path):
            container_info.append(container)

    if container_info:
        KUBERNETES_INFO["containers"] = container_info


if __name__ == "__main__":
    get_service_info()
    get_snap_info()
    get_pod_info()
    get_container_info()
    if KUBERNETES_INFO:
        helpers.HOTSOSYaml.dump({"kubernetes": KUBERNETES_INFO})
