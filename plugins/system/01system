#!/usr/bin/python3
import re
import os

from common import (
    constants,
    helpers
)


SYSTEM_INFO = {}


def unattended_upgrades_enabled():
    apt_config_dump = helpers.get_apt_config_dump()
    if not apt_config_dump:
        return

    for line in apt_config_dump:
        ret = re.compile(r"^APT::Periodic::Unattended-Upgrade\s+"
                         "\"([0-9]+)\";").match(line)
        if ret:
            if int(ret[1]) == 0:
                return False
            else:
                return True

    return False


def get_system_info():
    SYSTEM_INFO["hostname"] = helpers.get_hostname()[0].split()[0]

    data_source = os.path.join(constants.DATA_ROOT, "etc/lsb-release")
    if os.path.exists(data_source):
        for line in open(data_source).read().split():
            ret = re.compile(r"^DISTRIB_CODENAME=(.+)").match(line)
            if ret:
                SYSTEM_INFO["os"] = "ubuntu {}".format(ret[1])
                break

    lscpu_output = helpers.get_lscpu()
    if lscpu_output:
        for line in lscpu_output:
            ret = re.compile(r"^CPU\(s\):\s+([0-9]+)\s*.*").match(line)
            if ret:
                SYSTEM_INFO["num-cpus"] = int(ret[1])
                break

    uptime_output = helpers.get_uptime()
    if uptime_output:
        for line in uptime_output:
            ret = re.compile(r".+load average:\s+(.+)").match(line)
            if ret:
                SYSTEM_INFO["load"] = ret[1]
                break
    df_output = helpers.get_df()
    if df_output:
        for line in df_output:
            ret = re.compile(r"(.+\/$)").match(line)
            if ret:
                SYSTEM_INFO["rootfs"] = ret[1]
                break

    if unattended_upgrades_enabled():
        SYSTEM_INFO['unattended-upgrades'] = "ENABLED"
    else:
        SYSTEM_INFO['unattended-upgrades'] = "disabled"


if __name__ == "__main__":
    get_system_info()
    if SYSTEM_INFO:
        helpers.HOTSOSYaml.dump({"system": SYSTEM_INFO})
