name: Test
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  test:
    strategy:
      matrix:
        python-version: ['3.8', '3.10', '3.11', '3.12']
        os: [ubuntu-22.04, ubuntu-20.04]
        exclude:
          - os: ubuntu-22.04
            python-version: 3.8
          - os: ubuntu-20.04
            python-version: '3.10'
          - os: ubuntu-20.04
            python-version: '3.11'
          - os: ubuntu-20.04
            python-version: '3.12'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r gh-test-requirements.txt
    - name: Test with tox
      run: tox -e py3-coverage
    - name: Test with tox (non-utc timezone)
      run: tox -e py3-non-utc-tz
    - name: Run pylint
      run: tox -e pylint
      if: matrix.python-version == '3.10'
    - name: Run pep8
      run: tox -e pep8
      if: matrix.python-version == '3.10'
    - name: Run coveragereport
      run: tox -e coveragereport
      if: matrix.python-version == '3.10'
    - name: Run bashate
      run: tox -e bashate
      if: matrix.python-version == '3.10'
    - name: Run yamllint
      run: tox -e yamllint
      if: matrix.python-version == '3.10'
    - name: Run functional
      run: tox -e functional
      if: matrix.python-version == '3.10'
    - name: Run hotyvalidate
      run: tox -e hotyvalidate
      if: matrix.python-version == '3.10'
    - name: Build docs
      run: tox -e docs
      if: matrix.python-version == '3.10'
    - uses: actions/upload-artifact@v4
      with:
        name: documentation-preview
        path: doc/build
